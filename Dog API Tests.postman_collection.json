{
	"info": {
		"_postman_id": "8cd60336-7466-40ba-9de4-54b7b9452e7d",
		"name": "Dog API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25007409"
	},
	"item": [
		{
			"name": "Dog Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - message and status\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('message');\r",
							"    pm.expect(responseData).to.have.property('status');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dog.ceo/api/breeds/image/random",
					"protocol": "https",
					"host": [
						"dog",
						"ceo"
					],
					"path": [
						"api",
						"breeds",
						"image",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for response status code (should be 404 Not Found for incorrect parameters)\r",
							"pm.test(\"Status code is 404 Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// Test for the presence of the \"status\" field with the value \"error\"\r",
							"pm.test(\"Response has 'status' field with 'error'\", function () {\r",
							"    pm.response.to.have.jsonBody(\"status\", \"error\");\r",
							"});\r",
							"\r",
							"// Test for the presence of the \"message\" field\r",
							"pm.test(\"Response has 'message' field\", function () {\r",
							"    pm.response.to.have.jsonBody(\"message\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dog.ceo/api/breeds/image",
					"protocol": "https",
					"host": [
						"dog",
						"ceo"
					],
					"path": [
						"api",
						"breeds",
						"image"
					]
				}
			},
			"response": []
		}
	]
}